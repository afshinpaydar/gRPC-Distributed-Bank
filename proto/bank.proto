syntax = "proto3";

package banking;

enum ErrorMessage {
  USER_DOES_NOT_EXIST = 0; // default value
  INVALID_ARGUMENT = 1;
  INSUFFICIENT_BALANCE = 2;
  AMOUNT_SHOULD_BE_GREATER_THAN_ZERO = 3;
  INVALID_CURRENCY = 4;
}

// Ref: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto
message Money {
  // The three-letter currency code defined in ISO 4217.
  string currency_code = 1;

  // The whole units of the amount.
  // For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
  int64 units = 2;

  // Number of nano (10^-9) units of the amount.
  // The value must be between -999,999,999 and +999,999,999 inclusive.
  // If `units` is positive, `nanos` must be positive or zero.
  // If `units` is zero, `nanos` can be positive, zero, or negative.
  // If `units` is negative, `nanos` must be negative or zero.
  // For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
  int32 nanos = 3;
}

message WithdrawRequest {
  int32 userID = 1;
  Money ammount = 2;
}

message WithdrawResponse {
  double amountToWithdraw = 1;
  Money balance = 2;
}

message DepositRequest {
  int32 userID = 1;
  Money amount =2;
}

message DepositResponse {
  int32 userID = 1;
  Money amount =2;
}

message BalanceRequest {
  int32 userID =0;
}

message BalanceResponse {
  repeated Money balance = 1;
}

service BankingService {
  rpc deposit(DepositRequest) returns (DepositResponse) {}
  rpc withdraw(WithdrawRequest) returns (WithdrawResponse) {}
  rpc balance(BalanceRequest) returns (BalanceResponse) {}
}


